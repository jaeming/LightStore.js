{"version":3,"sources":["app/app.js"],"names":[],"mappingsxFA;AAAA","file":"dist/app.js","sourcesContent":["\"use strict\";\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Store = function () {\n  function Store(resources) {\n    var _this = this;\n\n    _classCallCheck(this, Store);\n\n    this.resourceNames = [];\n    resources.map(function (resource) {\n      _this[resource] = [];\n      _this.resourceNames.push(resource);\n    });\n  }\n\n  _createClass(Store, [{\n    key: \"list\",\n    value: function list(resource) {\n      return this[resource];\n    }\n  }, {\n    key: \"get\",\n    value: function get(resource, obj) {\n      this[resource].find(function (item) {\n        return item.rid === obj.rid;\n      });\n    }\n  }, {\n    key: \"get_by\",\n    value: function get_by(resource, options) {\n      var key = Object.keys(options)[0];\n      return this[resource].find(function (item) {\n        return item[key] === options[key];\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(resource, obj) {\n      obj.rid = Math.random().toString(36).substr(2, 16);\n      this[resource].push(obj);\n      return obj;\n    }\n  }, {\n    key: \"update\",\n    value: function update(resource, obj) {\n      var item = this[resource].find(function (i) {\n        return i.rid === obj.rid;\n      });\n      Object.keys(obj).map(function (attribute) {\n        item[attribute] = obj[attribute];\n      });\n      return item;\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(resource, obj) {\n      var list = this[resource];\n      var indexList = list.map(function (item) {\n        return item.rid;\n      });\n      var index = indexList.indexOf(obj.rid);\n      list.splice(index, 1);\n    }\n  }, {\n    key: \"create\",\n    value: function create(resource) {\n      this[resource] = [];\n      this.resourceNames.push(resource);\n    }\n  }, {\n    key: \"resources\",\n    value: function resources() {\n      var _this2 = this;\n\n      this.resourceNames.map(function (name) {\n        resourceObj = {};\n        resourceObj[name] = _this2[name];\n        return resourceObj;\n      });\n    }\n  }]);\n\n  return Store;\n}();\n"]}